{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "rules": {
    // STRICT RULES - Prevent LLMs from accumulating dead code and type safety issues
    // Philosophy: Block dead code accumulation, warn on type safety, allow API flexibility

    // Type Safety (PRAGMATIC)
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "warn",

    // Dead Code Prevention (STRICT - This is the key for LLMs!)
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_"
      }
    ],

    // Code Quality (STRICT)
    "complexity": ["error", 20],
    "max-lines-per-function": ["warn", 200],

    // Allowed for this project
    "no-console": "off"
  }
}
