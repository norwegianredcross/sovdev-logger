# =============================================================================
# Environment Configuration Sample for sovdev-logger Test Suite
# =============================================================================
# This file demonstrates how to configure test data using the EnvConfig helper.
# Copy this file to .env and uncomment/modify the values you need.
#
# Naming Conventions:
# - VARIABLE_NAME_LIST: Comma-separated values
# - VARIABLE_NAME_JSON: JSON string data  
# - VARIABLE_NAME_B64: Base64 encoded JSON data (most CI/CD friendly)
# - VARIABLE_NAME: Plain string value
# =============================================================================

# -----------------------------------------------------------------------------
# Basic Configuration
# -----------------------------------------------------------------------------

#OTEL_SERVICE_NAME=sovdev-test-company-lookup-typescript
SERVICE_NAME_ID=SYS1234567


# -----------------------------------------------------------------------------
# Company Test Data - Simple List Format
# -----------------------------------------------------------------------------

# Norwegian organization numbers for testing
# Format: Comma-separated list of organization numbers
TEST_COMPANIES_LIST=971277882,915933149,974652846,916201478

# Simple peer services as JSON
# Structure: [{"peer_id": "id", "peer_name": "name", "peer_type": "type"}]
PEER_SERVICES_JSON=[{"peer_id":"BRREG","peer_name":"Brønnøysundregistrene","peer_type":"government"},{"peer_id":"ALTINN","peer_name":"Altinn","peer_type":"government"},{"peer_id":"DIFI","peer_name":"Digitaliseringsdirektoratet","peer_type":"government"}]



# -----------------------------------------------------------------------------
# Company Test Data - JSON Format (with metadata)
# -----------------------------------------------------------------------------

# Companies with additional metadata as JSON
TEST_COMPANIES_JSON=[{"id":"971277882","name":"Norges Røde Kors","type":"humanitarian","valid":true},{"id":"915933149","name":"Røde Kors Hjelpekorps","type":"rescue","valid":true},{"id":"974652846","name":"Invalid Test Company","type":"test","valid":false},{"id":"916201478","name":"Norsk Folkehjelp","type":"humanitarian","valid":true}]

# -----------------------------------------------------------------------------
# Company Test Data - Base64 Format (most CI/CD friendly)
# -----------------------------------------------------------------------------

# Same data as above, but Base64 encoded to avoid shell escaping issues
# Original JSON: [{"id":"971277882","name":"Norges Røde Kors","comment":"Norwegian Red Cross"},{"id":"915933149","name":"Røde Kors Hjelpekorps","comment":"Red Cross Emergency Response"},{"id":"974652846","name":"Invalid Test Company","comment":"Invalid number for testing errors"},{"id":"916201478","name":"Norsk Folkehjelp","comment":"Norwegian People's Aid"}]
TEST_COMPANIES_B64=W3siaWQiOiI5NzEyNzc4ODIiLCJuYW1lIjoiTm9yZ2VzIFLDuGRlIEtyb3MiLCJjb21tZW50IjoiTm9yd2VnaWFuIFJlZCBDcm9zcyJ9LHsiaWQiOiI5MTU5MzMxNDkiLCJuYW1lIjoiUsO4ZGUgS3JvcyBIamVscGVrb3JwcyIsImNvbW1lbnQiOiJSZWQgQ3Jvc3MgRW1lcmdlbmN5IFJlc3BvbnNlIn0seyJpZCI6Ijk3NDY1Mjg0NiIsIm5hbWUiOiJJbnZhbGlkIFRlc3QgQ29tcGFueSIsImNvbW1lbnQiOiJJbnZhbGlkIG51bWJlciBmb3IgdGVzdGluZyBlcnJvcnMifSx7ImlkIjoiOTE2MjAxNDc4IiwibmFtZSI6Ik5vcnNrIEZvbGtlaGplbHAiLCJjb21tZW50IjoiTm9yd2VnaWFuIFBlb3BsZSdzIEFpZCJ9XQ==

# -----------------------------------------------------------------------------
# Peer Services Configuration
# -----------------------------------------------------------------------------


# Peer services as Base64 (recommended for CI/CD)
# Original JSON: [{"peer_id":"BRREG","peer_name":"Brønnøysundregistrene","peer_type":"government","endpoint":"https://data.brreg.no","timeout":5000},{"peer_id":"ALTINN","peer_name":"Altinn","peer_type":"government","endpoint":"https://altinn.no","timeout":3000},{"peer_id":"DIFI","peer_name":"Digitaliseringsdirektoratet","peer_type":"government","endpoint":"https://difi.no","timeout":4000}]
PEER_SERVICES_B64=W3sicGVlcl9pZCI6IkJSUkVHIiwicGVlcl9uYW1lIjoiQnLDuG5uw7h5c3VuZHJlZ2lzdGVyZW5lIiwicGVlcl90eXBlIjoiZ292ZXJubWVudCIsImVuZHBvaW50IjoiaHR0cHM6Ly9kYXRhLmJycmVnLm5vIiwidGltZW91dCI6NTAwMH0seyJwZWVyX2lkIjoiQUxUSU5OIiwicGVlcl9uYW1lIjoiQWx0aW5uIiwicGVlcl90eXBlIjoiZ292ZXJubWVudCIsImVuZHBvaW50IjoiaHR0cHM6Ly9hbHRpbm4ubm8iLCJ0aW1lb3V0IjozMDAwfSx7InBlZXJfaWQiOiJESUZJIiwicGVlcl9uYW1lIjoiRGlnaXRhbGlzZXJpbmdzZGlyZWt0b3JhdGV0IiwicGVlcl90eXBlIjoiZ292ZXJubWVudCIsImVuZHBvaW50IjoiaHR0cHM6Ly9kaWZpLm5vIiwidGltZW91dCI6NDAwMH1d

# Alternative: Simple key-value peer services
BRREG_ENDPOINT=https://data.brreg.no
ALTINN_ENDPOINT=https://altinn.no
DIFI_ENDPOINT=https://difi.no

# -----------------------------------------------------------------------------
# Address Test Data (for postal address examples)
# -----------------------------------------------------------------------------

# Addresses using semicolon separator (addresses contain commas)
TEST_ADDRESSES_LIST=vestengkleiva 3, 1385 asker, norway;karl johans gate 1, 0154 oslo, norway;storgata 15, 2000 lillestrøm, norway

# Addresses as structured JSON
TEST_ADDRESSES_JSON=[{"street":"vestengkleiva 3","postal":"1385","city":"asker","country":"norway"},{"street":"karl johans gate 1","postal":"0154","city":"oslo","country":"norway"},{"street":"storgata 15","postal":"2000","city":"lillestrøm","country":"norway"}]

# Addresses as Base64 (for CI/CD)
# Original: [{"street":"vestengkleiva 3","postal":"1385","city":"asker","country":"norway","notes":"Test address with special chars: $&!"},{"street":"karl johans gate 1","postal":"0154","city":"oslo","country":"norway"}]
TEST_ADDRESSES_B64=W3sic3RyZWV0IjoidmVzdGVuZ2tsZWl2YSAzIiwicG9zdGFsIjoiMTM4NSIsImNpdHkiOiJhc2tlciIsImNvdW50cnkiOiJub3J3YXkiLCJub3RlcyI6IlRlc3QgYWRkcmVzcyB3aXRoIHNwZWNpYWwgY2hhcnM6ICQmISJ9LHsic3RyZWV0Ijoia2FybCBqb2hhbnMgZ2F0ZSAxIiwicG9zdGFsIjoiMDE1NCIsImNpdHkiOiJvc2xvIiwiY291bnRyeSI6Im5vcndheSJ9XQ==

# -----------------------------------------------------------------------------
# Test Scenarios Configuration
# -----------------------------------------------------------------------------

# Different test scenarios
TEST_SCENARIO=integration
TEST_ENV=development

# Feature flags
ENABLE_MOCK_SERVICES=false
ENABLE_DETAILED_LOGGING=true
ENABLE_PERFORMANCE_METRICS=false

# -----------------------------------------------------------------------------
# CI/CD Specific Configuration
# -----------------------------------------------------------------------------

# CI/CD Detection (automatically detected by TestEnv.isCI())
# CI=true
# GITHUB_ACTIONS=true
# GITLAB_CI=true
# JENKINS_URL=https://jenkins.example.com

# -----------------------------------------------------------------------------
# Usage Examples in Code:
# -----------------------------------------------------------------------------
# 
# import { EnvConfig, TestEnv } from './env-config';
# 
# // Simple usage
# const companies = TestEnv.getCompanies();
# const brregId = TestEnv.getBrregSystemId();
# 
# // Advanced usage
# const companiesWithMetadata = EnvConfig.getJSON('TEST_COMPANIES_JSON', []);
# const peerServices = EnvConfig.getJSONBase64('PEER_SERVICES_B64', []);
# const addresses = EnvConfig.getList('TEST_ADDRESSES_LIST', [], { listDelimiter: ';' });
# 
# // Auto-detection
# const autoCompanies = EnvConfig.get('TEST_COMPANIES_LIST', []); // Auto-parsed as list
# const autoPeers = EnvConfig.get('PEER_SERVICES_JSON', []); // Auto-parsed as JSON
# 
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# How to Generate Base64 Values:
# -----------------------------------------------------------------------------
# 
# In Node.js/JavaScript:
# const data = [{"peer_id":"BRREG","peer_name":"Test"}];
# const base64 = Buffer.from(JSON.stringify(data)).toString('base64');
# console.log(base64);
#
# In command line:
# echo '[{"peer_id":"BRREG","peer_name":"Test"}]' | base64
#
# Or use the helper script (if created):
# node scripts/encode-test-data.js
# -----------------------------------------------------------------------------
