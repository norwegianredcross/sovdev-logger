{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://sovdev.no/schemas/loki-response-v1.json",
  "title": "Loki Query API Response Schema",
  "description": "JSON Schema for validating Loki query API responses. Ensures logs are stored with snake_case field names only.",
  "type": "object",
  "required": ["status", "data"],
  "properties": {
    "status": {
      "type": "string",
      "const": "success",
      "description": "Query status (must be 'success')"
    },
    "data": {
      "type": "object",
      "required": ["resultType", "result"],
      "properties": {
        "resultType": {
          "type": "string",
          "enum": ["streams", "matrix", "vector"],
          "description": "Type of Loki query result"
        },
        "result": {
          "type": "array",
          "description": "Array of log streams",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/stream"
          }
        },
        "stats": {
          "type": "object",
          "description": "Optional query statistics"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "definitions": {
    "stream": {
      "type": "object",
      "description": "A single log stream with labels and log entries",
      "required": ["stream", "values"],
      "properties": {
        "stream": {
          "type": "object",
          "description": "Stream labels (indexed fields)",
          "properties": {
            "service_name": {
              "type": "string",
              "minLength": 1,
              "description": "Service identifier (REQUIRED: snake_case)"
            },
            "service_version": {
              "type": "string",
              "minLength": 1,
              "description": "Service version (REQUIRED: snake_case)"
            }
          },
          "patternProperties": {
            "^[a-z][a-z0-9_]*$": {
              "type": "string",
              "description": "Additional labels must use snake_case"
            }
          },
          "not": {
            "anyOf": [
              {
                "required": ["serviceName"],
                "description": "FORBIDDEN: camelCase field names"
              },
              {
                "required": ["service.name"],
                "description": "FORBIDDEN: dotted field names"
              },
              {
                "required": ["peerService"],
                "description": "FORBIDDEN: camelCase field names"
              },
              {
                "required": ["peer.service"],
                "description": "FORBIDDEN: dotted field names"
              }
            ]
          },
          "additionalProperties": true
        },
        "values": {
          "type": "array",
          "description": "Array of [timestamp_ns, log_line] tuples",
          "items": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": [
              {
                "type": "string",
                "pattern": "^[0-9]{19}$",
                "description": "Timestamp in nanoseconds since Unix epoch"
              },
              {
                "type": "string",
                "description": "Log entry as JSON string"
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "log_entry": {
      "type": "object",
      "description": "Parsed log entry from values array (for validation)",
      "required": [
        "timestamp",
        "level",
        "service_name",
        "service_version",
        "peer_service",
        "function_name",
        "log_type",
        "message",
        "trace_id",
        "event_id"
      ],
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "level": {
          "type": "string",
          "enum": ["trace", "debug", "info", "warn", "error", "fatal"]
        },
        "service_name": {
          "type": "string",
          "minLength": 1
        },
        "service_version": {
          "type": "string",
          "minLength": 1
        },
        "peer_service": {
          "type": "string",
          "minLength": 1
        },
        "function_name": {
          "type": "string",
          "minLength": 1
        },
        "log_type": {
          "type": "string",
          "enum": ["transaction", "job.status", "job.progress"]
        },
        "message": {
          "type": "string",
          "minLength": 1
        },
        "trace_id": {
          "type": "string",
          "pattern": "^[0-9a-f]{32}$",
          "description": "OpenTelemetry trace identifier (32-char hex)"
        },
        "span_id": {
          "type": "string",
          "pattern": "^[0-9a-f]{16}$",
          "description": "OpenTelemetry span identifier (16-char hex, optional)"
        },
        "event_id": {
          "type": "string",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
          "description": "Unique event identifier (UUID v4)"
        },
        "input_json": {
          "oneOf": [
            {"type": "object"},
            {"type": "null"}
          ]
        },
        "response_json": {
          "oneOf": [
            {"type": "object"},
            {"type": "null"}
          ]
        },
        "exception": {
          "type": "object",
          "required": ["type", "message"],
          "properties": {
            "type": {
              "type": "string",
              "const": "Error"
            },
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string",
              "maxLength": 350
            }
          },
          "additionalProperties": false
        }
      },
      "not": {
        "anyOf": [
          {
            "required": ["serviceName"],
            "description": "FORBIDDEN: Use service_name, not serviceName"
          },
          {
            "required": ["functionName"],
            "description": "FORBIDDEN: Use function_name, not functionName"
          },
          {
            "required": ["logType"],
            "description": "FORBIDDEN: Use log_type, not logType"
          },
          {
            "required": ["traceId"],
            "description": "FORBIDDEN: Use trace_id, not traceId"
          },
          {
            "required": ["eventId"],
            "description": "FORBIDDEN: Use event_id, not eventId"
          }
        ]
      },
      "additionalProperties": false
    }
  }
}
