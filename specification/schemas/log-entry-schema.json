{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://sovdev.no/schemas/log-entry-v2.json",
  "title": "Sovdev Logger - File Log Entry Schema v2.0 (snake_case)",
  "description": "Strict JSON Schema for validating file log entries. Uses snake_case field names consistently throughout, including exception fields (exception_type, exception_message, exception_stacktrace).",
  "type": "object",
  "required": [
    "timestamp",
    "message",
    "level",
    "service_name",
    "service_version",
    "peer_service",
    "function_name",
    "log_type",
    "trace_id",
    "event_id"
  ],
  "comment": "session_id is optional in file logs - it's a resource attribute primarily used in OTLP export",
  "properties": {
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp with timezone"
    },
    "level": {
      "type": "string",
      "enum": ["trace", "debug", "info", "warn", "error", "fatal"],
      "description": "Log level (lowercase only)"
    },
    "message": {
      "type": "string",
      "minLength": 1,
      "description": "Human-readable log message"
    },
    "service_name": {
      "type": "string",
      "minLength": 1,
      "description": "Service identifier (snake_case)"
    },
    "service_version": {
      "type": "string",
      "minLength": 1,
      "description": "Service version (snake_case)"
    },
    "peer_service": {
      "type": "string",
      "minLength": 1,
      "description": "Peer service identifier (snake_case)"
    },
    "session_id": {
      "type": "string",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "description": "Session identifier (UUID v4, snake_case)"
    },
    "function_name": {
      "type": "string",
      "minLength": 1,
      "description": "Function/method name (snake_case)"
    },
    "log_type": {
      "type": "string",
      "enum": ["transaction", "job.status", "job.progress"],
      "description": "Log type classification (snake_case)"
    },
    "trace_id": {
      "type": "string",
      "pattern": "^[0-9a-f]{32}$",
      "description": "OpenTelemetry trace identifier (32-char hex, snake_case) - extracted from OTEL span context for proper distributed tracing"
    },
    "event_id": {
      "type": "string",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "description": "Unique event identifier (UUID v4, snake_case)"
    },
    "input_json": {
      "description": "Input parameters as object (snake_case)",
      "oneOf": [
        {"type": "object"},
        {"type": "null"}
      ]
    },
    "response_json": {
      "description": "Response data as object (snake_case)",
      "oneOf": [
        {"type": "object"},
        {"type": "null"}
      ]
    },
    "exception_type": {
      "type": "string",
      "minLength": 1,
      "description": "Exception type (snake_case, project standard)"
    },
    "exception_message": {
      "type": "string",
      "minLength": 1,
      "description": "Exception message (snake_case, project standard)"
    },
    "exception_stacktrace": {
      "type": "string",
      "maxLength": 350,
      "description": "Exception stack trace (snake_case, project standard, max 350 characters)"
    }
  },
  "additionalProperties": false,
  "errorMessage": {
    "additionalProperties": "Only snake_case field names are allowed. No camelCase (functionName, logType, etc.) or dotted notation (service.name, peer.service, exception.type, etc.)."
  }
}
